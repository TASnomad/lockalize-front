# This is a basic workflow to help you get started with Actions
name: Lockalize front CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ dev ]

jobs:
  ci:
    name: Test & build frontend app
    runs-on: ubuntu-latest
    env:
      COMMIT: ${{ github.sha }}
      REGISTRY: "eu.gcr.io"
      PROJECT: "lockalize"
      IMAGE: "frontend"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

    - name: Checkout dev branch & use Node.js v12.x
      uses: actions/checkout@v2

    - uses: actions/setup-node@v1
      with:
        node-version: "12.x"

    - name: Install missing dependencies for pptr
      run: |
          sudo apt update
          sudo apt-get install libwoff1 libopus0 libwebp6 libwebpdemux2 libenchant1c2a libgudev-1.0-0 libsecret-1-0 libhyphen0 libgdk-pixbuf2.0-0 libegl1 libgles2 libevent-2.1-6 libnotify4 libxslt1.1
          sudo apt-get install xvfb
    - name: Install dependencies & run tests
      run: |
          npm ci --silent
          npm run test:e2e
      env:
        CI: true

    - name: Setting up GCR credentials for Docker
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: "270.0.0"
        service_account_key: ${{ secrets.GCR_KEY }}
    - name: Configuring Docker with GCR credentials
      run: |
        gcloud auth configure-docker

    - name: Build frontend image
      run: |
          docker build -t "$REGISTRY/$PROJECT/$IMAGE:$COMMIT" \
            --build-arg BUILD_ENV="staging" .

    - name: Publish frontend image
      run: docker push "$REGISTRY/$PROJECT/$IMAGE:$COMMIT"

  cd:
    runs-on: ubuntu-latest
    needs: [ ci ]
    env:
      COMMIT: ${{ github.sha }}

    steps:

      - uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Get Lockalize k8s config
        run: doctl kubernetes cluster kubeconfig save k8s-do-ams3-lockalize

      - name: Deploy frontend helm chart with CI build image
        uses: WyriHaximus/github-action-helm3@v1
        with:
          exec: helm UPGRADE $IMAGE ./chart --namespace staging --set image.revision=$COMMIT

      - name: Looking helm deployment
        run: helm status frontend --namespace staging
